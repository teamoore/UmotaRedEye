@using UmotaRedEye.Models.Domain
@using UmotaRedEye.Models.Dto
@model MalzemeHareketViewModel

@{
    ViewData["Title"] = "Stok Girişi";
    var depoListesi = new List<SelectListItem>();
    var malzemeListesi = new List<SelectListItem>();

    depoListesi = (List<SelectListItem>)Model.DepolarList;
    malzemeListesi = (List<SelectListItem>)Model.MalzemeList;
}
 

@if (Model != null && !Model.IsSuccess)
{
    <div class="alert alert-danger" role="alert">
        @Model.ErrorMessage
    </div>
}

    <div class="text-center">
        <div id="qr-reader" style="width: 300px"></div>
    </div>

@using (Html.BeginForm("SaveMalzemeHareket","Stok",FormMethod.Post))
{
    @Html.HiddenFor(m => m.FisId)

    <div class="form-group">
        <label>Barkod</label>
        @Html.TextBoxFor(m => m.Barcode,new { @class = "form-control" })
    </div>

    <div class="form-group">
        <label>Depo</label>
        @Html.DropDownListFor(m => m.DepoId,depoListesi, new { @class = "form-control" })
    </div>

    <div class="form-group">
        <label>Malzeme</label>
        @Html.DropDownListFor(m => m.MalzemeId,malzemeListesi, new { @class = "form-control" })
    </div>

    <button type="submit" class="btn btn-primary">Kaydet</button>
}
<hr />

@if (Model != null && Model.MalzemeHareketler != null)
{
    <ul class="list-group">

        @foreach (var item in Model.MalzemeHareketler.ToList())
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                @item.Barcode ( Miktar : @item.Miktar.ToString() )

                <a href="/Stok/DeleteMalzemeHareket?id=@item.Id&fisId=@Model.FisId">Sil</a>

            </li>
        }

    </ul>
}

    <div id="divData">
        <ul id="ulBarcodes">
        </ul>
    </div>
 


<script src="~/Scripts/app/StokGiris.js" type="text/javascript"></script>
